# Define ClusterRole for Traefik with permissions for ingress resources
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik-controller-role
rules:
  - apiGroups: [""]
    resources: ["services", "endpoints", "secrets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["extensions", "networking.k8s.io"]
    resources: ["ingresses", "ingressclasses", "ingresses/status"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["traefik.io", "traefik.containo.us"]
    resources: ["middlewares", "middlewares/status", "middlewaretcps", "middlewaretcps/status",
                "ingressroutes", "ingressroutetcps", "ingressrouteudps", "serverstransports",
                "tlsoptions", "tlsstores", "traefikservices"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
# Bind Traefik's ClusterRole to ServiceAccount for necessary permissions
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik-controller-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-controller-role
subjects:
- kind: ServiceAccount
  name: traefik-service-account
  namespace: kube-system
---
# Service for Traefik with NodePort access for external requests
apiVersion: v1
kind: Service
metadata:
  name: web-server-traefik
  namespace: kube-system
  labels:
    app: traefik
spec:
  type: NodePort
  selector:
    app: traefik
  ports:
    - name: web
      port: 80
      targetPort: web
      nodePort: 30080
---
# Define a ServiceAccount for Traefik to operate with required permissions
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-service-account
  namespace: kube-system
---
# Defines a deployment for the Traefik reverse proxy
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik-deployment
  namespace: kube-system
  labels:
    app: traefik
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      serviceAccountName: traefik-service-account
      containers:
        - name: traefik
          image: traefik:v2.10
          args:
            - --api.insecure=true
            - --entrypoints.web.Address=:80
            - --providers.kubernetesingress
            - --providers.kubernetescrd
            - --providers.kubernetescrd.namespaces=exercise02,kube-system
          ports:
            - name: web
              containerPort: 80
          livenessProbe:
            httpGet:
              path: /dashboard/
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /dashboard/
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10

